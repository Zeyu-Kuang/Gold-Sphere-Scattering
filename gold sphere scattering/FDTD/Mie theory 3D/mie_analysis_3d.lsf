###########################################################################
# Scriptfile: mie_analysis_3d.lsf
#
# Description:
# This file shows how to use analysis groups in mie_example_3d.fsp to do 4
# types of analysis for 3D Mie scattering
#       1) The far field angular scattering in the x-y, x-z and y-z planes
#       2) The far field XY half space, this is only 3D simulation and this calculation can be time consuming
#       3) The absorption/scattering cross section	
#       4) The field enhancement calculation
#
# Copyright 2015, Lumerical Solutions, Inc.
###########################################################################
run;

# Choose which of the 4 possible analyses you want to do
do_polar_plot = 1;        # set 0 to not perform this test, 1 to perform the test
do_halfspace = 0;         # set 0 to not perform this test, 1 to perform the test
do_cross_sections = 1;    # set 0 to not perform this test, 1 to perform the test
do_field_enhancement = 1; # set 0 to not perform this test, 1 to perform the test

# Define target wavelength used for polar plot and field enhancement when enabled:
target_wavelength = 0.5e-6; 

# Define the resolution for the far field plots
polar_plot_res = 21;
halfspace_res = 31; # this number will significantly affect the time to run this analysis

# Far field polar plot and halfspace

setnamed("scat_ff", "target wavelength", target_wavelength);

if(do_polar_plot & do_halfspace ) {
  ?"  Calculating far field angular distribution and halfspace";
  ?"  NOTE: This calculation takes time!!";
  setnamed("scat_ff", "do polar plot",1);
  setnamed("scat_ff", "do halfspace",1);
  setnamed("scat_ff", "halfspace res", halfspace_res);
  setnamed("scat_ff", "polar plot res", polar_plot_res);
  runanalysis("scat_ff");
  ?"  Calculation done!";
}else{
  if(do_polar_plot) {
  ?"  Calculating far field angular distribution";
  setnamed("scat_ff", "do polar plot",1);
  setnamed("scat_ff", "do halfspace",0);
  setnamed("scat_ff", "halfspace res", halfspace_res);
  setnamed("scat_ff", "polar plot res", polar_plot_res);
  runanalysis("scat_ff");
  }
  if(do_halfspace) { # only for 3D simulation
  ?"  Calculating far field halfspace";
  ?"  NOTE: This calculation takes time!!";
  setnamed("scat_ff", "do polar plot",0);
  setnamed("scat_ff", "do halfspace",1);
  setnamed("scat_ff", "halfspace res", halfspace_res);
  setnamed("scat_ff", "polar plot res", polar_plot_res);
  runanalysis("scat_ff");
  ?"  Calculation done!";
  }
}

# Cross section analysis
if(do_cross_sections) {
  ?"  Calculating scattering and absorption cross sections";

  # get sigma and particle radius
  sigmaabs = getresult("total","sigma");  
  sigmascat = getresult("scat","sigma");  
  r = getnamed("sphere","radius"); # the radius of the mie particle

  # Calculate cross-sections normalized to the particle area
  Qscat = sigmascat.sigma/(pi*r^2);
  Qabs  = -sigmaabs.sigma/(pi*r^2);
  lambda = sigmaabs.lambda;

  # calculate the size parameter
  size_parameter = 2*pi*r/lambda;

  # compare with analytic based on material fit, from the text file 'mie_au_jc_fdtd.txt'
  a = readdata("mie_au_jc_fdtd.txt");
  sizeparam = pinch(a,2,1);
  qsca = pinch(a,2,2);
  qabs = pinch(a,2,3);
  Qscat_theory = interp(qsca,sizeparam,size_parameter);
  Qabs_theory  = interp(qabs,sizeparam,size_parameter);

  # Plot results
  plot(size_parameter,Qscat,Qscat_theory,"size parameter","Mie efficiency","Scattering cross section");
  legend("FDTD","Mie theory");
  plot(size_parameter,Qabs,Qabs_theory, "size parameter","Mie efficiency","Absorption cross section");
  legend("FDTD","Mie theory");
}

# Field enhancement
if(do_field_enhancement) {
  ?"  Calculating field enhancement";

  E = getresult("x_normal_profile","E");
  E2 = E.E2; # returns |E|^2
  y = E.y;
  z = E.z;
  lambda = E.lambda;

 
  # choose one frequency point for the images  
  fpoint = find(E.f, c/target_wavelength);

  # image the total field near the particle
  image(y*1e9,z*1e9,pinch(E2,4,fpoint),"y (nm)","z (nm)","|E|^2 in y-z plane at "+num2str(lambda(fpoint)*1e9)+" nm");
  ?"    Maximum field enhancement over all wavelengths (|E|^2/|Einc|^2) in y-z plane is: " + num2str(max(E2));


  E = getresult("y_normal_profile","E");
  E2 = E.E2; # returns |E|^2
  x = E.x;
  z = E.z;
  image(x*1e9,z*1e9,pinch(E2,4,fpoint),"x (nm)","z (nm)","|E|^2 in x-z plane at "+num2str(lambda(fpoint)*1e9)+" nm");
  ?"    Maximum field enhancement over all wavelengths (|E|^2/|Einc|^2) in x-z plane is: " + num2str(max(E2));


  E = getresult("z_normal_profile","E");
  E2 = E.E2; # returns |E|^2
  x = E.x;
  y = E.y;
  image(x*1e9,y*1e9,pinch(E2,4,fpoint),"x (nm)","y (nm)","|E|^2 in x-y plane at "+num2str(lambda(fpoint)*1e9)+" nm");
  ?"    Maximum field enhancement over all wavelengths (|E|^2/|Einc|^2) in x-y plane is: " + num2str(max(E2));
}

